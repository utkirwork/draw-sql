-- ================================================
-- Database Schema Generated by DrawSQL
-- Generated at: 2025-09-25T05:13:10.226Z
-- Database Type: POSTGRESQL
-- Schema: public
-- ================================================

CREATE TABLE "workflow_request_conditions" (
    "id" UUID NOT NULL,
    "request_id" BIGINT,
    "state" VARCHAR NOT NULL,
    "created_by" INTEGER,
    "updated_by" INTEGER,
    "created_at" INTEGER,
    "updated_at" INTEGER,
    "deleted_by" INTEGER,
    "deleted_at" INTEGER,
    "is_deleted" BOOLEAN,
    "status" INTEGER,
    PRIMARY KEY ("id")
);

CREATE TABLE "workflow_request_tasks" (
    "id" UUID NOT NULL,
    "request_id" INTEGER,
    "created_by" INTEGER,
    "updated_by" INTEGER,
    "created_at" INTEGER,
    "updated_at" INTEGER,
    "deleted_by" INTEGER,
    "deleted_at" INTEGER,
    "is_deleted" BOOLEAN,
    "status" INTEGER,
    "comment" TEXT,
    "responsible_id" INTEGER,
    "responsible_type" VARCHAR,
    "started_by" INTEGER,
    "started_at" INTEGER,
    "end_by" INTEGER,
    "end_at" INTEGER,
    "end_comment" TEXT,
    "deadline_at" INTEGER,
    "started_branch_id" INTEGER,
    "end_branch_id" INTEGER,
    "responsible_branch_id" INTEGER,
    "created_branch_id" INTEGER,
    "end_transition" VARCHAR,
    "transition_names" JSON,
    "permissions_view" JSON,
    "can_apply_transition" JSON,
    "can_view" JSON,
    "parent_task_id" BIGINT,
    "current_state" VARCHAR,
    PRIMARY KEY ("id")
);

CREATE TABLE "workflow_requests" (
    "id" UUID NOT NULL,
    "loan_id" BIGINT NOT NULL,
    "created_by" INTEGER,
    "updated_by" INTEGER,
    "created_at" INTEGER,
    "updated_at" INTEGER,
    "deleted_by" INTEGER,
    "deleted_at" INTEGER,
    "is_deleted" BOOLEAN,
    "status" INTEGER,
    "process_id" INTEGER NOT NULL,
    "process_term_id" INTEGER NOT NULL,
    "current_state_name" VARCHAR,
    "current_task_id" BIGINT,
    "branch_id" INTEGER,
    PRIMARY KEY ("id")
);

CREATE TABLE "process" (
    "id" UUID NOT NULL,
    "created_by" INTEGER,
    "updated_by" INTEGER,
    "created_at" INTEGER,
    "updated_at" INTEGER,
    "deleted_by" INTEGER,
    "deleted_at" INTEGER,
    "is_deleted" BOOLEAN,
    "status" INTEGER,
    PRIMARY KEY ("id")
);

CREATE TABLE "process_terms" (
    "id" UUID NOT NULL,
    "created_by" INTEGER,
    "updated_by" INTEGER,
    "created_at" INTEGER,
    "updated_at" INTEGER,
    "deleted_by" INTEGER,
    "deleted_at" INTEGER,
    "is_deleted" BOOLEAN,
    "status" INTEGER,
    PRIMARY KEY ("id")
);

CREATE TABLE "checkpoints" (
    "id" UUID NOT NULL,
    "loan_id" BIGINT,
    "request_id" BIGINT,
    "deadline_datetime" TIMESTAMP,
    "completed_datetime" TIMESTAMP,
    "created_by" INTEGER,
    "updated_by" INTEGER,
    "created_at" INTEGER,
    "updated_at" INTEGER,
    "deleted_by" INTEGER,
    "deleted_at" INTEGER,
    "is_deleted" BOOLEAN,
    "status" INTEGER,
    "begin_datetime" TIMESTAMP,
    PRIMARY KEY ("id")
);

CREATE TABLE "process_documents" (
    "created_by" INTEGER,
    "id" UUID NOT NULL,
    "title" VARCHAR,
    "uid" VARCHAR,
    "process_id" INTEGER,
    "updated_by" INTEGER,
    "created_at" INTEGER,
    "updated_at" INTEGER,
    "deleted_by" INTEGER,
    "deleted_at" INTEGER,
    "is_deleted" BOOLEAN,
    "status" INTEGER,
    "is_required" BOOLEAN,
    "description" TEXT,
    PRIMARY KEY ("id")
);

CREATE TABLE "tabs" (
    "id" UUID NOT NULL,
    "name" VARCHAR,
    "created_by" INTEGER,
    "updated_by" INTEGER,
    "created_at" INTEGER,
    "updated_at" INTEGER,
    "deleted_by" INTEGER,
    "deleted_at" INTEGER,
    "is_deleted" BOOLEAN,
    "status" INTEGER,
    "tab_able_type" VARCHAR,
    PRIMARY KEY ("id")
);

CREATE TABLE "tab_workflow_states" (
    "id" UUID NOT NULL,
    "created_by" INTEGER,
    "updated_by" INTEGER,
    "created_at" INTEGER,
    "updated_at" INTEGER,
    "deleted_by" INTEGER,
    "deleted_at" INTEGER,
    "is_deleted" BOOLEAN,
    "status" INTEGER,
    "state_id" INTEGER,
    "tab_id" INTEGER,
    PRIMARY KEY ("id")
);

CREATE TABLE "states" (
    "id" UUID NOT NULL,
    "name" VARCHAR,
    "created_by" INTEGER,
    "created_at" INTEGER,
    "updated_by" INTEGER,
    "updated_at" INTEGER,
    "deleted_by" INTEGER,
    "deleted_at" INTEGER,
    "is_deleted" BOOLEAN,
    "status" INTEGER,
    PRIMARY KEY ("id")
);

CREATE TABLE "workflow_requests_documents" (
    "id" UUID NOT NULL,
    "created_by" INTEGER,
    "updated_by" INTEGER,
    "created_at" INTEGER,
    "updated_at" INTEGER,
    "deleted_by" INTEGER,
    "deleted_at" INTEGER,
    "is_deleted" BOOLEAN,
    "status" INTEGER,
    "request_id" BIGINT,
    "process_document_id" INTEGER,
    PRIMARY KEY ("id")
);

CREATE TABLE "process_products" (
    "id" UUID NOT NULL,
    "created_by" INTEGER,
    "updated_by" INTEGER,
    "created_at" INTEGER,
    "updated_at" INTEGER,
    "deleted_by" INTEGER,
    "deleted_at" INTEGER,
    "is_deleted" BOOLEAN,
    "status" INTEGER,
    "code" VARCHAR,
    "process_id" INTEGER,
    "type" VARCHAR,
    PRIMARY KEY ("id")
);

-- ================================================
-- Foreign Key Constraints
-- ================================================

ALTER TABLE "workflow_requests" ADD CONSTRAINT "fk_workflow_requests_workflow_request_conditions" FOREIGN KEY ("id") REFERENCES "workflow_request_conditions" ("request_id") ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE "workflow_requests" ADD CONSTRAINT "fk_workflow_requests_workflow_request_tasks" FOREIGN KEY ("id") REFERENCES "workflow_request_tasks" ("request_id") ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE "process" ADD CONSTRAINT "fk_process_workflow_requests" FOREIGN KEY ("id") REFERENCES "workflow_requests" ("process_id") ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE "process_terms" ADD CONSTRAINT "fk_process_terms_workflow_requests" FOREIGN KEY ("id") REFERENCES "workflow_requests" ("process_term_id") ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE "workflow_requests" ADD CONSTRAINT "fk_workflow_requests_checkpoints" FOREIGN KEY ("id") REFERENCES "checkpoints" ("request_id") ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE "process" ADD CONSTRAINT "fk_process_process_documents" FOREIGN KEY ("id") REFERENCES "process_documents" ("process_id") ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE "tabs" ADD CONSTRAINT "fk_tabs_tab_workflow_states" FOREIGN KEY ("id") REFERENCES "tab_workflow_states" ("tab_id") ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE "states" ADD CONSTRAINT "fk_states_tab_workflow_states" FOREIGN KEY ("id") REFERENCES "tab_workflow_states" ("state_id") ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE "process_documents" ADD CONSTRAINT "fk_process_documents_workflow_requests_documents" FOREIGN KEY ("id") REFERENCES "workflow_requests_documents" ("process_document_id") ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE "workflow_requests" ADD CONSTRAINT "fk_workflow_requests_workflow_requests_documents" FOREIGN KEY ("id") REFERENCES "workflow_requests_documents" ("request_id") ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE "process" ADD CONSTRAINT "fk_process_process_products" FOREIGN KEY ("id") REFERENCES "process_products" ("process_id") ON DELETE RESTRICT ON UPDATE RESTRICT;
-- ================================================
-- Indexes
-- ================================================

CREATE INDEX "idx_workflow_request_conditions_request_id" ON "workflow_request_conditions" ("request_id");
CREATE INDEX "idx_workflow_request_tasks_request_id" ON "workflow_request_tasks" ("request_id");
CREATE INDEX "idx_workflow_requests_process_id" ON "workflow_requests" ("process_id");
CREATE INDEX "idx_workflow_requests_process_term_id" ON "workflow_requests" ("process_term_id");
CREATE INDEX "idx_checkpoints_request_id" ON "checkpoints" ("request_id");
CREATE INDEX "idx_process_documents_process_id" ON "process_documents" ("process_id");
CREATE INDEX "idx_tab_workflow_states_state_id" ON "tab_workflow_states" ("state_id");
CREATE INDEX "idx_tab_workflow_states_tab_id" ON "tab_workflow_states" ("tab_id");
CREATE INDEX "idx_workflow_requests_documents_request_id" ON "workflow_requests_documents" ("request_id");
CREATE INDEX "idx_workflow_requests_documents_process_document_id" ON "workflow_requests_documents" ("process_document_id");
CREATE INDEX "idx_process_products_process_id" ON "process_products" ("process_id");